# Задача 3.1.
# Создайте класс матрицы (или таблицы).
# Требования к классу:
# - каждая колонка является числом от 1 до n (n любое число, которые вы поставите!)
# - в каждой ячейке содержится либо число, либо None
# - доступы следующие методы матрицы:
# * принимать новые значения, 
# * заменять существующие значения, 
# * выводить число строк и колонок.

# Пример матрицы 10 на 10 из единиц:
# [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]

# Примечание! 
# - новый класс не запрещено строить на базе существующих типов данных: списков, словарей и тд.
# - отображать в таблице/матрице название колонки не обязательно!
# - проявите фантазию :)


import numpy as np
class Matrixx():
# Создали матрицу  
    matrixx = np.arange(1,101).reshape((10,10))
    print(matrixx)  
# Добавили новые значения в матрицу
    matrixx1 = np.pad(matrixx, ((0,0),(0,3)), mode='constant', constant_values=0)
    print(matrixx1)       
# Заменили существующие значения матрицы 
    matrixx1[matrixx1 == 0 ] = 20
    print(matrixx1)
# Вывели число строк и колонок матрицы
    rows, columns = matrixx1.shape
    print("Rows = ",rows)
    print("Columns = ", columns)

b = Matrixx

print(b.matrixx1)


